{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "JSON1001",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1001_WrongType.integerProperty",
              "Integer",
              "String"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 30
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1001_WrongType.integerProperty"
          }
        },
        {
          "ruleId": "JSON1002",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1002_RequiredPropertyMissing",
              "requiredProperty"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 43
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1002_RequiredPropertyMissing"
          }
        },
        {
          "ruleId": "JSON1003",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1003_TooFewArrayItems.arrayProperty",
              "2",
              "1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 26
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1003_TooFewArrayItems.arrayProperty"
          }
        },
        {
          "ruleId": "JSON1004",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1004_TooManyArrayItems.arrayProperty",
              "2",
              "3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 26
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1004_TooManyArrayItems.arrayProperty"
          }
        },
        {
          "ruleId": "JSON1005",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1005_AdditionalPropertiesProhibited.unknown",
              "unknown"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 18
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1005_AdditionalPropertiesProhibited.unknown"
          }
        },
        {
          "ruleId": "JSON1006",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1006_ValueTooLarge.propertyWithMaximum",
              "6",
              "5"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 32
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1006_ValueTooLarge.propertyWithMaximum"
          }
        },
        {
          "ruleId": "JSON1007",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1007_ValueTooLargeExclusive.propertyWithExclusiveMaximum",
              "5",
              "5"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 41
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1007_ValueTooLargeExclusive.propertyWithExclusiveMaximum"
          }
        },
        {
          "ruleId": "JSON1008",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1008_ValueTooSmall.propertyWithMinimum",
              "3",
              "4"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 32
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1008_ValueTooSmall.propertyWithMinimum"
          }
        },
        {
          "ruleId": "JSON1009",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1009_ValueTooSmallExclusive.propertyWithExclusiveMinimum",
              "4",
              "4"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 41
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1009_ValueTooSmallExclusive.propertyWithExclusiveMinimum"
          }
        },
        {
          "ruleId": "JSON1010",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1010_TooManyProperties",
              "2",
              "3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 37
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1010_TooManyProperties"
          }
        },
        {
          "ruleId": "JSON1011",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1011_TooFewProperties",
              "2",
              "1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 36
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1011_TooFewProperties"
          }
        },
        {
          "ruleId": "JSON1012",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1012_NotAMultiple.evenNumber",
              "4.001",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 27
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1012_NotAMultiple.evenNumber"
          }
        },
        {
          "ruleId": "JSON1013",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1013_StringTooLong.stringWithMaxLength",
              "abcd",
              "4",
              "3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 37
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1013_StringTooLong.stringWithMaxLength"
          }
        },
        {
          "ruleId": "JSON1014",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1014_StringTooShort.stringWithMinLength",
              "ab",
              "2",
              "3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 35
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1014_StringTooShort.stringWithMinLength"
          }
        },
        {
          "ruleId": "JSON1015",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1015_StringDoesNotMatchPattern.stringWithPattern",
              "1b3",
              "^\\d+$"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 34
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1015_StringDoesNotMatchPattern.stringWithPattern"
          }
        },
        {
          "ruleId": "JSON1016",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1016_NotAllOf.propertyMatchesAll",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 31
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1016_NotAllOf.propertyMatchesAll"
          }
        },
        {
          "ruleId": "JSON1017",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1017_NotAnyOf.propertyMatchesAny",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 31
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1017_NotAnyOf.propertyMatchesAny"
          }
        },
        {
          "ruleId": "JSON1018",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1018_NotOneOf_With_Zero.propertyMatchesOne",
              "0",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 31
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1018_NotOneOf_With_Zero.propertyMatchesOne"
          }
        },
        {
          "ruleId": "JSON1018",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1018_NotOneOf_With_Multiple.propertyMatchesOne",
              "2",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 31
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1018_NotOneOf_With_Multiple.propertyMatchesOne"
          }
        },
        {
          "ruleId": "JSON1019",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1019_InvalidEnumValue.enumProperty",
              "\"c\"",
              "\"a\", \"b\""
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 27
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1019_InvalidEnumValue.enumProperty"
          }
        },
        {
          "ruleId": "JSON1020",
          "ruleIndex": 19,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1020_NotUnique.arrayPropertyWithUniquenessConstraint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 50
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1020_NotUnique.arrayPropertyWithUniquenessConstraint"
          }
        },
        {
          "ruleId": "JSON1021",
          "ruleIndex": 20,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1021_TooFewItemSchemas.arrayPropertyWithItemSchemas",
              "3",
              "2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 41
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1021_TooFewItemSchemas.arrayPropertyWithItemSchemas"
          }
        },
        {
          "ruleId": "JSON1022",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1022_ValidatesAgainstNotSchema.propertyWithNotSchema"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 34
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1022_ValidatesAgainstNotSchema.propertyWithNotSchema"
          }
        },
        {
          "ruleId": "JSON1023",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "id": "default",
            "arguments": [
              "testSuites.negative.JSON1023_DependentPropertyMissing",
              "propertyWithDependency",
              "\"dependency\"",
              "\"dependency\""
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json",
                  "index": 2
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 44
                }
              }
            }
          ],
          "properties": {
            "jsonPath": "testSuites.negative.JSON1023_DependentPropertyMissing"
          }
        }
      ],
      "tool": {
        "driver": {
          "name": "Microsoft.Json.Schema.Validation.Cli",
          "organization": "Microsoft",
          "product": "JSON Schema",
          "fullName": "Microsoft.Json.Schema.Validation.Cli 1.1.3.0",
          "version": "1.1.3.0",
          "semanticVersion": "1.1.3",
          "rules": [
            {
              "id": "JSON1001",
              "name": "WrongType",
              "fullDescription": {
                "text": "An instance has a type that is not permitted by the schema's 'type' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema requires one of the types [{1}], but a token of type '{2}' was found."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1002",
              "name": "RequiredPropertyMissing",
              "fullDescription": {
                "text": "A property required by the schema's 'required' property is missing."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The required property '{1}' is missing."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1003",
              "name": "TooFewArrayItems",
              "fullDescription": {
                "text": "An array has fewer elements than permitted by the schema's 'minItems' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema requires at least {1} array items, but there are {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1004",
              "name": "TooManyArrayItems",
              "fullDescription": {
                "text": "An array has more elements than permitted by the schema's 'maxItems' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema permits at most {1} array items, but there are {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1005",
              "name": "AdditionalPropertiesProhibited",
              "fullDescription": {
                "text": "An object contains a property not defined by the schema, and the schema does not permit additional properties."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema does not define a property '{1}', and the schema does not permit additional properties."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1006",
              "name": "ValueTooLarge",
              "fullDescription": {
                "text": "A numeric value is greater than the maximum value permitted by the schema's 'maximum' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} is greater than the maximum permitted value of {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1007",
              "name": "ValueTooLargeExclusive",
              "fullDescription": {
                "text": "A numeric value is greater than or equal to the exclusive maximum value permitted by the schema's 'maximum' and 'exclusiveMaximum' properties."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} is greater than or equal to the exclusive maximum permitted value of {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1008",
              "name": "ValueTooSmall",
              "fullDescription": {
                "text": "A numeric value is less than the minimum value permitted by the schema's 'minimum' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} is less than the minimum permitted value of {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1009",
              "name": "ValueTooSmallExclusive",
              "fullDescription": {
                "text": "A numeric value is less than or equal to the exclusive minimum value permitted by the schema's 'minimum' and 'exclusiveMinimum' properties."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} is less than or equal to the exclusive minimum permitted value of {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1010",
              "name": "TooManyProperties",
              "fullDescription": {
                "text": "An object has more properties than permitted by the schema's 'maxProperties' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema permits at most {1} object properties, but there are {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1011",
              "name": "TooFewProperties",
              "fullDescription": {
                "text": "An object has fewer properties than permitted by the schema's 'minProperties' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema requires at least {1} object properties, but there are {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1012",
              "name": "NotAMultiple",
              "fullDescription": {
                "text": "A numeric value is not a multiple of the value specified by the schema's 'multipleOf' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} is not a multiple of {2}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1013",
              "name": "StringTooLong",
              "fullDescription": {
                "text": "A string is longer than permitted by the schema's 'maxLength' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: '{1}' has length {2}, which is greater than the maximum permitted length {3}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1014",
              "name": "StringTooShort",
              "fullDescription": {
                "text": "A string is shorter than permitted by the schema's 'minLength' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: '{1}' has length {2}, which is less than the minimum permitted length {3}."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1015",
              "name": "StringDoesNotMatchPattern",
              "fullDescription": {
                "text": "A string does not match the regular expression pattern specified by the schema's 'pattern' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: '{1}' does not match the regular expression '{2}'."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1016",
              "name": "NotAllOf",
              "fullDescription": {
                "text": "An instance does not successfully validate against all of the schemas by the schema's 'allOf' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The instance does not validate successfully against all of the {1} schemas specified by 'allOf'."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1017",
              "name": "NotAnyOf",
              "fullDescription": {
                "text": "An instance does not successfully validate against any of the schemas by the schema's 'anyOf' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The instance does not validate successfully against any of the {1} schemas specified by 'anyOf'."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1018",
              "name": "NotOneOf",
              "fullDescription": {
                "text": "An instance does not successfully validate against exactly one of the schemas by the schema's 'oneOf' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The instance validates successfully against {1} of the {2} schemas specified by 'oneOf', instead of validating successfully against exactly one of them."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1019",
              "name": "InvalidEnumValue",
              "fullDescription": {
                "text": "A string does not match any of the values specified by the schema's 'enum' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: {1} does not match any of the enum values [{2}]."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1020",
              "name": "NotUnique",
              "fullDescription": {
                "text": "An array's elements are not unique, as required by the schema's 'uniqueItems' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The elements of the array are not unique."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1021",
              "name": "TooFewItemSchemas",
              "fullDescription": {
                "text": "An array has more elements than the number of elements in the array specified by the schema's 'items' property, and the schema does not permit additional array items."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The array has {1} items, but the array of schemas specified by 'items' has only {2} items, and 'additionalItems' is not specified to allow additional array items."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1022",
              "name": "ValidatesAgainstNotSchema",
              "fullDescription": {
                "text": "An instance successfully validates against the schema specified by the schema's 'not' property."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The instance validates successfully against the schema specified by 'not'."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "JSON1023",
              "name": "DependentPropertyMissing",
              "fullDescription": {
                "text": "An instance does not have all the properties specified in the schema by a property dependency."
              },
              "messageStrings": {
                "default": {
                  "text": "{0}: The schema requires that when property '{1}' is present, properties [{2}] are also present, but properties [{3}] are missing."
                }
              },
              "defaultConfiguration": {
                "level": "error"
              }
            }
          ],
          "properties": {
            "Comments": "Command line tool to validate a JSON instance against a JSON Schema"
          }
        }
      },
      "invocations": [
        {
          "startTimeUtc": "2020-07-28T15:22:49.841Z",
          "endTimeUtc": "2020-07-28T15:22:50.230Z",
          "toolExecutionNotifications": [
            {
              "message": {
                "text": "Validation time: 00:00:00.3672531"
              },
              "level": "note"
            }
          ],
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "ComprehensiveInstanceFile.json"
          }
        },
        {
          "location": {
            "uri": "ComprehensiveSchema.json"
          }
        },
        {
          "location": {
            "uri": "file:///c:/dev/jschema/src/Json.Schema.Validation.UnitTests/TestData/ComprehensiveInstanceFile.json"
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}